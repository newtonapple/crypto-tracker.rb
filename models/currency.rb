# frozen_string_literal: true

# Table: currencies
# Columns:
#  id         | integer                     | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  name       | character varying(255)      | NOT NULL
#  symbol     | character varying(125)      | NOT NULL
#  type       | currency_type               | NOT NULL
#  created_at | timestamp without time zone | NOT NULL
#  updated_at | timestamp without time zone | NOT NULL
# Indexes:
#  currencies_pkey                 | PRIMARY KEY btree (id)
#  currencies_symbol_name_type_key | UNIQUE btree (symbol, name, type)
#  currencies_created_at_index     | btree (created_at)
#  currencies_name_index           | btree (name)
#  currencies_updated_at_index     | btree (updated_at)
# Referenced By:
#  acquisitions       | acquisitions_cost_currency_id_fkey         | (cost_currency_id) REFERENCES currencies(id)
#  acquisitions       | acquisitions_currency_id_fkey              | (currency_id) REFERENCES currencies(id)
#  assets             | assets_cost_currency_id_fkey               | (cost_currency_id) REFERENCES currencies(id)
#  assets             | assets_currency_id_fkey                    | (currency_id) REFERENCES currencies(id)
#  disposals          | disposals_currency_id_fkey                 | (currency_id) REFERENCES currencies(id)
#  disposals          | disposals_fiat_currency_id_fkey            | (fiat_currency_id) REFERENCES currencies(id)
#  transactions       | transactions_fee_currency_id_fkey          | (fee_currency_id) REFERENCES currencies(id)
#  transactions       | transactions_from_currency_id_fkey         | (from_currency_id) REFERENCES currencies(id)
#  transactions       | transactions_market_value_currency_id_fkey | (market_value_currency_id) REFERENCES currencies(id)
#  transactions       | transactions_to_currency_id_fkey           | (to_currency_id) REFERENCES currencies(id)
#  transferred_assets | transferred_assets_cost_currency_id_fkey   | (cost_currency_id) REFERENCES currencies(id)
#  transferred_assets | transferred_assets_currency_id_fkey        | (currency_id) REFERENCES currencies(id)
#  transfers          | transfers_currency_id_fkey                 | (currency_id) REFERENCES currencies(id)
#  transfers          | transfers_fiat_currency_id_fkey            | (fiat_currency_id) REFERENCES currencies(id)
#  wallets            | wallets_currency_id_fkey                   | (currency_id) REFERENCES currencies(id)

class Currency < Sequel::Model
  plugin :static_cache

  BY_SYMBOL = all.each_with_object(Hash.new { |h, k| h[k] = [] }) do |c, h|
    h[c.symbol] << c
  end.freeze

  def self.by_symbols(symbols)
    currencies = []
    symbols.each do |s|
      currency = by_symbol(s)
      currencies << currency if currency
    end
    currencies
  end

  def self.by_symbol(symbol, name: nil, type: nil)
    currencies = BY_SYMBOL[symbol]
    return currencies.first if currencies.size == 1

    if name
      currencies = currencies.filter { |c| c.name == name }
      return currencies.first if currencies.size == 1
    end

    if type
      currencies = currencies.filter { |c| c.name == type }
      return currencies.first if currencies.size == 1
    end

    currencies.first
  end

  def fiat?
    type == 'fiat'
  end

  def crypto?
    type == 'crypto'
  end
end
