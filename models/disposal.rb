# frozen_string_literal: true

# Table: disposals
# Columns:
#  id                      | integer                     | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  portfolio_id            | integer                     | NOT NULL
#  account_id              | integer                     | NOT NULL
#  currency_id             | integer                     | NOT NULL
#  fiat_currency_id        | integer                     | NOT NULL
#  transaction_id          | integer                     |
#  acquisition_id          | integer                     | NOT NULL
#  acquisition_type        | acquisition_type            | NOT NULL
#  type                    | disposal_type               | NOT NULL
#  capital_gains_treatment | capital_gains_treatment     | NOT NULL
#  amount                  | numeric                     | NOT NULL
#  cost_amount             | numeric                     | NOT NULL
#  sold_amount             | numeric                     | NOT NULL
#  net_amount              | numeric                     | NOT NULL
#  acquired_at             | timestamp without time zone | NOT NULL
#  disposed_at             | timestamp without time zone | NOT NULL
#  created_at              | timestamp without time zone | NOT NULL
# Indexes:
#  disposals_pkey                                                  | PRIMARY KEY btree (id)
#  disposals_acquisition_id_index                                  | btree (acquisition_id)
#  disposals_created_at_index                                      | btree (created_at)
#  disposals_portfolio_id_account_id_capital_gains_treatment_dispo | btree (portfolio_id, account_id, capital_gains_treatment, disposed_at, acquired_at)
#  disposals_portfolio_id_account_id_currency_id_disposed_at_acqui | btree (portfolio_id, account_id, currency_id, disposed_at, acquired_at)
#  disposals_portfolio_id_account_id_currency_id_type_disposed_at_ | btree (portfolio_id, account_id, currency_id, type, disposed_at, acquired_at)
#  disposals_portfolio_id_account_id_disposed_at_acquired_at_index | btree (portfolio_id, account_id, disposed_at, acquired_at)
#  disposals_portfolio_id_account_id_type_disposed_at_acquired_at_ | btree (portfolio_id, account_id, type, disposed_at, acquired_at)
#  disposals_portfolio_id_capital_gains_treatment_disposed_at_acqu | btree (portfolio_id, capital_gains_treatment, disposed_at, acquired_at)
#  disposals_portfolio_id_currency_id_disposed_at_acquired_at_inde | btree (portfolio_id, currency_id, disposed_at, acquired_at)
#  disposals_portfolio_id_currency_id_type_disposed_at_acquired_at | btree (portfolio_id, currency_id, type, disposed_at, acquired_at)
#  disposals_portfolio_id_disposed_at_acquired_at_index            | btree (portfolio_id, disposed_at, acquired_at)
#  disposals_portfolio_id_type_disposed_at_acquired_at_index       | btree (portfolio_id, type, disposed_at, acquired_at)
#  disposals_transaction_id_index                                  | btree (transaction_id)
# Foreign key constraints:
#  disposals_account_id_fkey       | (account_id) REFERENCES accounts(id)
#  disposals_acquisition_id_fkey   | (acquisition_id) REFERENCES acquisitions(id)
#  disposals_currency_id_fkey      | (currency_id) REFERENCES currencies(id)
#  disposals_fiat_currency_id_fkey | (fiat_currency_id) REFERENCES currencies(id)
#  disposals_portfolio_id_fkey     | (portfolio_id) REFERENCES portfolios(id)

class Disposal < Sequel::Model
  many_to_one :portfolio
  many_to_one :account
  many_to_one :currency
  many_to_one :fiat_currency, class: :Currency
  many_to_one :transaction
  many_to_one :acquisition

  TABLE_HEADERS = [
    'id',
    'amount', '',
    'cost', '', 'cost_avg', '',
    'sold', '', 'sold_avg', '',
    'p/l', '',
    'tax_treatment', 'days_held',
    'acquisition', 'acquired_at',
    'disposal', 'disposed_at'
  ].freeze
  TABLE_ALIGNMENTS = (%i[left] + (%i[right left] * 6) + (%i[center] * 6)).freeze
  extend TableFormatter

  # 366 days
  # reference: https://www.tradelogsoftware.com/resources/filing-taxes/capital-gains/
  LONG_TERM_GAIN_DAYS = 366

  def before_validation
    set_acquisition_fields
    set_net_amount
    set_captital_gains_treatment
    super
  end

  def disposed_on
    disposed_at&.to_date
  end

  def acquired_on
    acquired_at&.to_date
  end

  def table_row
    avg_currency_symbol = "#{fiat_currency.symbol}/#{currency.symbol}"
    [
      # id & types
      id,
      # amount,
      amount.to_s('F'), currency.symbol,
      # cost
      cost_amount.round(2).to_s('F'), fiat_currency.symbol,
      (cost_amount / amount).round(2).to_s('F'), avg_currency_symbol,
      # sold
      sold_amount.round(2).to_s('F'), fiat_currency.symbol,
      (sold_amount / amount).round(2).to_s('F'), avg_currency_symbol,
      # net
      net_amount.round(2).to_s('F'), fiat_currency.symbol,
      # dates
      capital_gains_treatment,
      (disposed_on - acquired_on).to_i,
      acquisition_type, acquired_at.strftime('%Y-%m-%d %H:%M:%S'),
      type, disposed_at.strftime('%Y-%m-%d %H:%M:%S')
    ]
  end

  private

  def set_net_amount
    return unless amount && cost_amount

    self.net_amount = sold_amount - cost_amount
  end

  def set_captital_gains_treatment
    return unless acquired_at && disposed_at

    self.capital_gains_treatment = ((disposed_on - acquired_on).to_i < LONG_TERM_GAIN_DAYS ? 'short_term' : 'long_term')
  end

  def set_acquisition_fields
    return unless acquisition_id

    self.acquisition_type = acquisition.type if acquisition_type.nil? && acquisition
    self.acquired_at = acquisition.acquired_at if acquired_at.nil? && acquisition
  end
end
